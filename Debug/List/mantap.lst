
AVRASM ver. 2.1.30  D:\Semester 2\Komunikasi Data\mantap\Debug\List\mantap.asm Sun Jun 12 21:14:18 2022

D:\Semester 2\Komunikasi Data\mantap\Debug\List\mantap.asm(1417): warning: Register r4 already defined by the .DEF directive
D:\Semester 2\Komunikasi Data\mantap\Debug\List\mantap.asm(1418): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.48 Evaluation
                 ;(C) Copyright 1998-2022 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 12,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 002a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 __RESET:
00002a 94f8      	CLI
00002b 27ee      	CLR  R30
00002c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00002d e0f1      	LDI  R31,1
00002e bffb      	OUT  GICR,R31
00002f bfeb      	OUT  GICR,R30
000030 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000031 e08d      	LDI  R24,(14-2)+1
000032 e0a2      	LDI  R26,2
000033 27bb      	CLR  R27
                 __CLEAR_REG:
000034 93ed      	ST   X+,R30
000035 958a      	DEC  R24
000036 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000037 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000038 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000039 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00003a 93ed      	ST   X+,R30
00003b 9701      	SBIW R24,1
00003c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00003d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00003e bfed      	OUT  SPL,R30
00003f e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000040 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000041 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000042 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000043 940c 00cc 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void menampilkan(void)
                 ; 0000 001F {
                 
                 	.CSEG
                 _menampilkan:
                 ; .FSTART _menampilkan
                 ; 0000 0020 DDRB=0xff;
000045 efef      	LDI  R30,LOW(255)
000046 bbe7      	OUT  0x17,R30
                 ; 0000 0021 }
000047 9508      	RET
                 ; .FEND
                 ;void nadaC(void)
                 ; 0000 0024 {
                 _nadaC:
                 ; .FSTART _nadaC
                 ; 0000 0025 for(i=0; i<261; i++)
000048 2444      	CLR  R4
000049 2455      	CLR  R5
                 _0x4:
00004a e0e5      	LDI  R30,LOW(261)
00004b e0f1      	LDI  R31,HIGH(261)
00004c 164e      	CP   R4,R30
00004d 065f      	CPC  R5,R31
00004e f444      	BRGE _0x5
                 ; 0000 0026 {
                 ; 0000 0027 PORTB.1=0;
00004f 98c1      	CBI  0x18,1
                 ; 0000 0028 delay_us(1912);
000050 d0d1      	RCALL SUBOPT_0x0
                 ; 0000 0029 PORTB.1=1;
000051 9ac1      	SBI  0x18,1
                 ; 0000 002A delay_us(1912);
000052 d0cf      	RCALL SUBOPT_0x0
                 ; 0000 002B }
000053 01f2      	MOVW R30,R4
000054 9631      	ADIW R30,1
000055 012f      	MOVW R4,R30
000056 cff3      	RJMP _0x4
                 _0x5:
                 ; 0000 002C }
000057 9508      	RET
                 ; .FEND
                 ;void nadaD(void)
                 ; 0000 002E {
                 _nadaD:
                 ; .FSTART _nadaD
                 ; 0000 002F for(i=0; i<293; i++)
000058 2444      	CLR  R4
000059 2455      	CLR  R5
                 _0xB:
00005a e2e5      	LDI  R30,LOW(293)
00005b e0f1      	LDI  R31,HIGH(293)
00005c 164e      	CP   R4,R30
00005d 065f      	CPC  R5,R31
00005e f444      	BRGE _0xC
                 ; 0000 0030 {
                 ; 0000 0031 PORTB.1=0;
00005f 98c1      	CBI  0x18,1
                 ; 0000 0032 delay_us(1703);
000060 d0c6      	RCALL SUBOPT_0x1
                 ; 0000 0033 PORTB.1=1;
000061 9ac1      	SBI  0x18,1
                 ; 0000 0034 delay_us(1703);
000062 d0c4      	RCALL SUBOPT_0x1
                 ; 0000 0035 }
000063 01f2      	MOVW R30,R4
000064 9631      	ADIW R30,1
000065 012f      	MOVW R4,R30
000066 cff3      	RJMP _0xB
                 _0xC:
                 ; 0000 0036 }
000067 9508      	RET
                 ; .FEND
                 ;void nadaE(void)
                 ; 0000 0038 {
                 _nadaE:
                 ; .FSTART _nadaE
                 ; 0000 0039 for(i=0; i<329; i++)
000068 2444      	CLR  R4
000069 2455      	CLR  R5
                 _0x12:
00006a e4e9      	LDI  R30,LOW(329)
00006b e0f1      	LDI  R31,HIGH(329)
00006c 164e      	CP   R4,R30
00006d 065f      	CPC  R5,R31
00006e f444      	BRGE _0x13
                 ; 0000 003A {
                 ; 0000 003B PORTB.1=0;
00006f 98c1      	CBI  0x18,1
                 ; 0000 003C delay_us(1517);
000070 d0bb      	RCALL SUBOPT_0x2
                 ; 0000 003D PORTB.1=1;
000071 9ac1      	SBI  0x18,1
                 ; 0000 003E delay_us(1517);
000072 d0b9      	RCALL SUBOPT_0x2
                 ; 0000 003F }
000073 01f2      	MOVW R30,R4
000074 9631      	ADIW R30,1
000075 012f      	MOVW R4,R30
000076 cff3      	RJMP _0x12
                 _0x13:
                 ; 0000 0040 }
000077 9508      	RET
                 ; .FEND
                 ;void nadaF(void)
                 ; 0000 0042 {
                 _nadaF:
                 ; .FSTART _nadaF
                 ; 0000 0043 for(i=0; i<349; i++)
000078 2444      	CLR  R4
000079 2455      	CLR  R5
                 _0x19:
00007a e5ed      	LDI  R30,LOW(349)
00007b e0f1      	LDI  R31,HIGH(349)
00007c 164e      	CP   R4,R30
00007d 065f      	CPC  R5,R31
00007e f444      	BRGE _0x1A
                 ; 0000 0044 {
                 ; 0000 0045 PORTB.1=0;
00007f 98c1      	CBI  0x18,1
                 ; 0000 0046 delay_us(1432);
000080 d0b0      	RCALL SUBOPT_0x3
                 ; 0000 0047 PORTB.1=1;
000081 9ac1      	SBI  0x18,1
                 ; 0000 0048 delay_us(1432);
000082 d0ae      	RCALL SUBOPT_0x3
                 ; 0000 0049 }
000083 01f2      	MOVW R30,R4
000084 9631      	ADIW R30,1
000085 012f      	MOVW R4,R30
000086 cff3      	RJMP _0x19
                 _0x1A:
                 ; 0000 004A }
000087 9508      	RET
                 ; .FEND
                 ;void nadaG(void)
                 ; 0000 004C {
                 _nadaG:
                 ; .FSTART _nadaG
                 ; 0000 004D for(i=0; i<392; i++)
000088 2444      	CLR  R4
000089 2455      	CLR  R5
                 _0x20:
00008a e8e8      	LDI  R30,LOW(392)
00008b e0f1      	LDI  R31,HIGH(392)
00008c 164e      	CP   R4,R30
00008d 065f      	CPC  R5,R31
00008e f444      	BRGE _0x21
                 ; 0000 004E {
                 ; 0000 004F PORTB.1=0;
00008f 98c1      	CBI  0x18,1
                 ; 0000 0050 delay_us(1275);
000090 d0a5      	RCALL SUBOPT_0x4
                 ; 0000 0051 PORTB.1=1;
000091 9ac1      	SBI  0x18,1
                 ; 0000 0052 delay_us(1275);
000092 d0a3      	RCALL SUBOPT_0x4
                 ; 0000 0053 }
000093 01f2      	MOVW R30,R4
000094 9631      	ADIW R30,1
000095 012f      	MOVW R4,R30
000096 cff3      	RJMP _0x20
                 _0x21:
                 ; 0000 0054 }
000097 9508      	RET
                 ; .FEND
                 ;void nadaA(void)
                 ; 0000 0056 {
                 _nadaA:
                 ; .FSTART _nadaA
                 ; 0000 0057 for(i=0; i<440; i++)
000098 2444      	CLR  R4
000099 2455      	CLR  R5
                 _0x27:
00009a ebe8      	LDI  R30,LOW(440)
00009b e0f1      	LDI  R31,HIGH(440)
00009c 164e      	CP   R4,R30
00009d 065f      	CPC  R5,R31
00009e f444      	BRGE _0x28
                 ; 0000 0058 {
                 ; 0000 0059 PORTB.1=0;
00009f 98c1      	CBI  0x18,1
                 ; 0000 005A delay_us(1136);
0000a0 d09a      	RCALL SUBOPT_0x5
                 ; 0000 005B PORTB.1=1;
0000a1 9ac1      	SBI  0x18,1
                 ; 0000 005C delay_us(1136);
0000a2 d098      	RCALL SUBOPT_0x5
                 ; 0000 005D }
0000a3 01f2      	MOVW R30,R4
0000a4 9631      	ADIW R30,1
0000a5 012f      	MOVW R4,R30
0000a6 cff3      	RJMP _0x27
                 _0x28:
                 ; 0000 005E }
0000a7 9508      	RET
                 ; .FEND
                 ;void nadaB(void)
                 ; 0000 0060 {
                 _nadaB:
                 ; .FSTART _nadaB
                 ; 0000 0061 for(i=0; i<493; i++)
0000a8 2444      	CLR  R4
0000a9 2455      	CLR  R5
                 _0x2E:
0000aa eeed      	LDI  R30,LOW(493)
0000ab e0f1      	LDI  R31,HIGH(493)
0000ac 164e      	CP   R4,R30
0000ad 065f      	CPC  R5,R31
0000ae f454      	BRGE _0x2F
                 ; 0000 0062 {
                 ; 0000 0063 PORTB.1=0;
0000af 98c1      	CBI  0x18,1
                 ; 0000 0064 delay_us(1013);
0000b0 d08f      	RCALL SUBOPT_0x6
                 ; 0000 0065 PORTB.1=1;
0000b1 9ac1      	SBI  0x18,1
                 ; 0000 0066 delay_us(1013);
0000b2 d08d      	RCALL SUBOPT_0x6
                 ; 0000 0067 PORTC=0b01101101;
0000b3 e6ed      	LDI  R30,LOW(109)
0000b4 bbe5      	OUT  0x15,R30
                 ; 0000 0068 }
0000b5 01f2      	MOVW R30,R4
0000b6 9631      	ADIW R30,1
0000b7 012f      	MOVW R4,R30
0000b8 cff1      	RJMP _0x2E
                 _0x2F:
                 ; 0000 0069 }
0000b9 9508      	RET
                 ; .FEND
                 ;void nadaH(void)
                 ; 0000 006B {
                 _nadaH:
                 ; .FSTART _nadaH
                 ; 0000 006C for(i=0; i<528; i++)
0000ba 2444      	CLR  R4
0000bb 2455      	CLR  R5
                 _0x35:
0000bc e1e0      	LDI  R30,LOW(528)
0000bd e0f2      	LDI  R31,HIGH(528)
0000be 164e      	CP   R4,R30
0000bf 065f      	CPC  R5,R31
0000c0 f454      	BRGE _0x36
                 ; 0000 006D {
                 ; 0000 006E PORTB.1=0;
0000c1 98c1      	CBI  0x18,1
                 ; 0000 006F delay_us(947);
0000c2 d082      	RCALL SUBOPT_0x7
                 ; 0000 0070 PORTB.1=1;
0000c3 9ac1      	SBI  0x18,1
                 ; 0000 0071 delay_us(947);
0000c4 d080      	RCALL SUBOPT_0x7
                 ; 0000 0072 PORTC=0b00000111;
0000c5 e0e7      	LDI  R30,LOW(7)
0000c6 bbe5      	OUT  0x15,R30
                 ; 0000 0073 }
0000c7 01f2      	MOVW R30,R4
0000c8 9631      	ADIW R30,1
0000c9 012f      	MOVW R4,R30
0000ca cff1      	RJMP _0x35
                 _0x36:
                 ; 0000 0074 }
0000cb 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 0076 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0077 // Declare your local variables here
                 ; 0000 0078 
                 ; 0000 0079 // Input/Output Ports initialization
                 ; 0000 007A // Port A initialization
                 ; 0000 007B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 007C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 007D PORTA=0x00;
0000cc e0e0      	LDI  R30,LOW(0)
0000cd bbeb      	OUT  0x1B,R30
                 ; 0000 007E DDRA=0x00;
0000ce bbea      	OUT  0x1A,R30
                 ; 0000 007F 
                 ; 0000 0080 // Port B initialization
                 ; 0000 0081 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0082 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0083 PORTB=0x00;
0000cf bbe8      	OUT  0x18,R30
                 ; 0000 0084 DDRB=0x00;
0000d0 bbe7      	OUT  0x17,R30
                 ; 0000 0085 
                 ; 0000 0086 // Port C initialization
                 ; 0000 0087 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0088 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0089 PORTC=0x00;
0000d1 bbe5      	OUT  0x15,R30
                 ; 0000 008A DDRC=0x00;
0000d2 bbe4      	OUT  0x14,R30
                 ; 0000 008B 
                 ; 0000 008C // Port D initialization
                 ; 0000 008D // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 008E // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 008F PORTD=0x00;
0000d3 bbe2      	OUT  0x12,R30
                 ; 0000 0090 DDRD=0xFF;
0000d4 efef      	LDI  R30,LOW(255)
0000d5 bbe1      	OUT  0x11,R30
                 ; 0000 0091 
                 ; 0000 0092 // Timer/Counter 0 initialization
                 ; 0000 0093 // Clock source: System Clock
                 ; 0000 0094 // Clock value: Timer 0 Stopped
                 ; 0000 0095 // Mode: Normal top=0xFF
                 ; 0000 0096 // OC0 output: Disconnected
                 ; 0000 0097 TCCR0=0x00;
0000d6 e0e0      	LDI  R30,LOW(0)
0000d7 bfe3      	OUT  0x33,R30
                 ; 0000 0098 TCNT0=0x00;
0000d8 bfe2      	OUT  0x32,R30
                 ; 0000 0099 OCR0=0x00;
0000d9 bfec      	OUT  0x3C,R30
                 ; 0000 009A 
                 ; 0000 009B // Timer/Counter 1 initialization
                 ; 0000 009C // Clock source: System Clock
                 ; 0000 009D // Clock value: Timer1 Stopped
                 ; 0000 009E // Mode: Normal top=0xFFFF
                 ; 0000 009F // OC1A output: Discon.
                 ; 0000 00A0 // OC1B output: Discon.
                 ; 0000 00A1 // Noise Canceler: Off
                 ; 0000 00A2 // Input Capture on Falling Edge
                 ; 0000 00A3 // Timer1 Overflow Interrupt: Off
                 ; 0000 00A4 // Input Capture Interrupt: Off
                 ; 0000 00A5 // Compare A Match Interrupt: Off
                 ; 0000 00A6 // Compare B Match Interrupt: Off
                 ; 0000 00A7 TCCR1A=0x00;
0000da bdef      	OUT  0x2F,R30
                 ; 0000 00A8 TCCR1B=0x00;
0000db bdee      	OUT  0x2E,R30
                 ; 0000 00A9 TCNT1H=0x00;
0000dc bded      	OUT  0x2D,R30
                 ; 0000 00AA TCNT1L=0x00;
0000dd bdec      	OUT  0x2C,R30
                 ; 0000 00AB ICR1H=0x00;
0000de bde7      	OUT  0x27,R30
                 ; 0000 00AC ICR1L=0x00;
0000df bde6      	OUT  0x26,R30
                 ; 0000 00AD OCR1AH=0x00;
0000e0 bdeb      	OUT  0x2B,R30
                 ; 0000 00AE OCR1AL=0x00;
0000e1 bdea      	OUT  0x2A,R30
                 ; 0000 00AF OCR1BH=0x00;
0000e2 bde9      	OUT  0x29,R30
                 ; 0000 00B0 OCR1BL=0x00;
0000e3 bde8      	OUT  0x28,R30
                 ; 0000 00B1 
                 ; 0000 00B2 // Timer/Counter 2 initialization
                 ; 0000 00B3 // Clock source: System Clock
                 ; 0000 00B4 // Clock value: Timer2 Stopped
                 ; 0000 00B5 // Mode: Normal top=0xFF
                 ; 0000 00B6 // OC2 output: Disconnected
                 ; 0000 00B7 ASSR=0x00;
0000e4 bde2      	OUT  0x22,R30
                 ; 0000 00B8 TCCR2=0x00;
0000e5 bde5      	OUT  0x25,R30
                 ; 0000 00B9 TCNT2=0x00;
0000e6 bde4      	OUT  0x24,R30
                 ; 0000 00BA OCR2=0x00;
0000e7 bde3      	OUT  0x23,R30
                 ; 0000 00BB 
                 ; 0000 00BC // External Interrupt(s) initialization
                 ; 0000 00BD // INT0: Off
                 ; 0000 00BE // INT1: Off
                 ; 0000 00BF // INT2: Off
                 ; 0000 00C0 MCUCR=0x00;
0000e8 bfe5      	OUT  0x35,R30
                 ; 0000 00C1 MCUCSR=0x00;
0000e9 bfe4      	OUT  0x34,R30
                 ; 0000 00C2 
                 ; 0000 00C3 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00C4 TIMSK=0x00;
0000ea bfe9      	OUT  0x39,R30
                 ; 0000 00C5 
                 ; 0000 00C6 // USART initialization
                 ; 0000 00C7 // USART disabled
                 ; 0000 00C8 UCSRB=0x00;
0000eb b9ea      	OUT  0xA,R30
                 ; 0000 00C9 
                 ; 0000 00CA // Analog Comparator initialization
                 ; 0000 00CB // Analog Comparator: Off
                 ; 0000 00CC // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 00CD ACSR=0x80;
0000ec e8e0      	LDI  R30,LOW(128)
0000ed b9e8      	OUT  0x8,R30
                 ; 0000 00CE SFIOR=0x00;
0000ee e0e0      	LDI  R30,LOW(0)
0000ef bfe0      	OUT  0x30,R30
                 ; 0000 00CF 
                 ; 0000 00D0 // ADC initialization
                 ; 0000 00D1 // ADC disabled
                 ; 0000 00D2 ADCSRA=0x00;
0000f0 b9e6      	OUT  0x6,R30
                 ; 0000 00D3 
                 ; 0000 00D4 // SPI initialization
                 ; 0000 00D5 // SPI disabled
                 ; 0000 00D6 SPCR=0x00;
0000f1 b9ed      	OUT  0xD,R30
                 ; 0000 00D7 
                 ; 0000 00D8 // TWI initialization
                 ; 0000 00D9 // TWI disabled
                 ; 0000 00DA TWCR=0x00;
0000f2 bfe6      	OUT  0x36,R30
                 ; 0000 00DB 
                 ; 0000 00DC while (1)
                 _0x3B:
                 ; 0000 00DD {
                 ; 0000 00DE // Place your code here
                 ; 0000 00DF if (PINA.0==0)
0000f3 99c8      	SBIC 0x19,0
0000f4 c010      	RJMP _0x3E
                 ; 0000 00E0 {
                 ; 0000 00E1 PORTD=0b10000000;
0000f5 e8e0      	LDI  R30,LOW(128)
0000f6 d053      	RCALL SUBOPT_0x8
                 ; 0000 00E2 delay_ms(500);
                 ; 0000 00E3 PORTD=0b00000000;
                 ; 0000 00E4 delay_ms(100);
                 ; 0000 00E5 PORTD=0b01000000;
0000f7 e4e0      	LDI  R30,LOW(64)
0000f8 d051      	RCALL SUBOPT_0x8
                 ; 0000 00E6 delay_ms(500);
                 ; 0000 00E7 PORTD=0b00000000;
                 ; 0000 00E8 delay_ms(100);
                 ; 0000 00E9 PORTD=0b00100000;
0000f9 e2e0      	LDI  R30,LOW(32)
0000fa d04f      	RCALL SUBOPT_0x8
                 ; 0000 00EA delay_ms(500);
                 ; 0000 00EB PORTD=0b00000000;
                 ; 0000 00EC delay_ms(100);
                 ; 0000 00ED PORTD=0b00010000;
0000fb e1e0      	LDI  R30,LOW(16)
0000fc d04d      	RCALL SUBOPT_0x8
                 ; 0000 00EE delay_ms(500);
                 ; 0000 00EF PORTD=0b00000000;
                 ; 0000 00F0 delay_ms(100);
                 ; 0000 00F1 PORTD=0b00001000;
0000fd e0e8      	LDI  R30,LOW(8)
0000fe d04b      	RCALL SUBOPT_0x8
                 ; 0000 00F2 delay_ms(500);
                 ; 0000 00F3 PORTD=0b00000000;
                 ; 0000 00F4 delay_ms(100);
                 ; 0000 00F5 PORTD=0b00000100;
0000ff e0e4      	LDI  R30,LOW(4)
000100 d049      	RCALL SUBOPT_0x8
                 ; 0000 00F6 delay_ms(500);
                 ; 0000 00F7 PORTD=0b00000000;
                 ; 0000 00F8 delay_ms(100);
                 ; 0000 00F9 PORTD=0b00000010;
000101 e0e2      	LDI  R30,LOW(2)
000102 d047      	RCALL SUBOPT_0x8
                 ; 0000 00FA delay_ms(500);
                 ; 0000 00FB PORTD=0b00000000;
                 ; 0000 00FC delay_ms(100);
                 ; 0000 00FD PORTD=0b00000001;
000103 e0e1      	LDI  R30,LOW(1)
000104 d045      	RCALL SUBOPT_0x8
                 ; 0000 00FE delay_ms(500);
                 ; 0000 00FF PORTD=0b00000000;
                 ; 0000 0100 delay_ms(100);
                 ; 0000 0101 }
                 ; 0000 0102 if (PINA.1==0)
                 _0x3E:
000105 99c9      	SBIC 0x19,1
000106 c019      	RJMP _0x3F
                 ; 0000 0103 {
                 ; 0000 0104 menampilkan();
000107 df3d      	RCALL _menampilkan
                 ; 0000 0105 nadaC();          //do
000108 df3f      	RCALL _nadaC
                 ; 0000 0106 PORTC=0b01011011;
000109 e5eb      	LDI  R30,LOW(91)
00010a d048      	RCALL SUBOPT_0x9
                 ; 0000 0107 delay_ms(400);
                 ; 0000 0108 PORTC=0b00000000;
                 ; 0000 0109 
                 ; 0000 010A nadaD();          //re
00010b df4c      	RCALL _nadaD
                 ; 0000 010B PORTC=0b00000110;
00010c e0e6      	LDI  R30,LOW(6)
00010d d045      	RCALL SUBOPT_0x9
                 ; 0000 010C delay_ms(400);
                 ; 0000 010D PORTC=0b00000000;
                 ; 0000 010E 
                 ; 0000 010F nadaE();          //mi
00010e df59      	RCALL _nadaE
                 ; 0000 0110 PORTC=0b00000110;
00010f e0e6      	LDI  R30,LOW(6)
000110 d042      	RCALL SUBOPT_0x9
                 ; 0000 0111 delay_ms(400);
                 ; 0000 0112 PORTC=0b00000000;
                 ; 0000 0113 
                 ; 0000 0114 nadaF();          //fa
000111 df66      	RCALL _nadaF
                 ; 0000 0115 PORTC=0b00000110;
000112 e0e6      	LDI  R30,LOW(6)
000113 d03f      	RCALL SUBOPT_0x9
                 ; 0000 0116 delay_ms(400);
                 ; 0000 0117 PORTC=0b00000000;
                 ; 0000 0118 
                 ; 0000 0119 nadaG();          //so
000114 df73      	RCALL _nadaG
                 ; 0000 011A PORTC=0b01100110;
000115 e6e6      	LDI  R30,LOW(102)
000116 d03c      	RCALL SUBOPT_0x9
                 ; 0000 011B delay_ms(400);
                 ; 0000 011C PORTC=0b00000000;
                 ; 0000 011D 
                 ; 0000 011E nadaA();          //la
000117 df80      	RCALL _nadaA
                 ; 0000 011F PORTC=0b01100110;
000118 e6e6      	LDI  R30,LOW(102)
000119 d039      	RCALL SUBOPT_0x9
                 ; 0000 0120 delay_ms(400);
                 ; 0000 0121 PORTC=0b00000000;
                 ; 0000 0122 
                 ; 0000 0123 nadaB();          //si
00011a df8d      	RCALL _nadaB
                 ; 0000 0124 PORTC=0b01101101;
00011b e6ed      	LDI  R30,LOW(109)
00011c d036      	RCALL SUBOPT_0x9
                 ; 0000 0125 delay_ms(400);
                 ; 0000 0126 PORTC=0b00000000;
                 ; 0000 0127 
                 ; 0000 0128 nadaH();          //do
00011d df9c      	RCALL _nadaH
                 ; 0000 0129 PORTC=0b00000111;
00011e e0e7      	LDI  R30,LOW(7)
00011f d033      	RCALL SUBOPT_0x9
                 ; 0000 012A delay_ms(400);
                 ; 0000 012B PORTC=0b00000000;
                 ; 0000 012C }
                 ; 0000 012D }
                 _0x3F:
000120 cfd2      	RJMP _0x3B
                 ; 0000 012E }
                 _0x40:
000121 cfff      	RJMP _0x40
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
                +
000122 e688     +LDI R24 , LOW ( 5736 )
000123 e196     +LDI R25 , HIGH ( 5736 )
                +__DELAY_USW_LOOP :
000124 9701     +SBIW R24 , 1
000125 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 5736
000126 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
                +
000127 ef85     +LDI R24 , LOW ( 5109 )
000128 e193     +LDI R25 , HIGH ( 5109 )
                +__DELAY_USW_LOOP :
000129 9701     +SBIW R24 , 1
00012a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 5109
00012b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
00012c ec87     +LDI R24 , LOW ( 4551 )
00012d e191     +LDI R25 , HIGH ( 4551 )
                +__DELAY_USW_LOOP :
00012e 9701     +SBIW R24 , 1
00012f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 4551
000130 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000131 ec88     +LDI R24 , LOW ( 4296 )
000132 e190     +LDI R25 , HIGH ( 4296 )
                +__DELAY_USW_LOOP :
000133 9701     +SBIW R24 , 1
000134 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 4296
000135 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
000136 ef81     +LDI R24 , LOW ( 3825 )
000137 e09e     +LDI R25 , HIGH ( 3825 )
                +__DELAY_USW_LOOP :
000138 9701     +SBIW R24 , 1
000139 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 3825
00013a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
                +
00013b e580     +LDI R24 , LOW ( 3408 )
00013c e09d     +LDI R25 , HIGH ( 3408 )
                +__DELAY_USW_LOOP :
00013d 9701     +SBIW R24 , 1
00013e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 3408
00013f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
000140 ed8f     +LDI R24 , LOW ( 3039 )
000141 e09b     +LDI R25 , HIGH ( 3039 )
                +__DELAY_USW_LOOP :
000142 9701     +SBIW R24 , 1
000143 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 3039
000144 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000145 e189     +LDI R24 , LOW ( 2841 )
000146 e09b     +LDI R25 , HIGH ( 2841 )
                +__DELAY_USW_LOOP :
000147 9701     +SBIW R24 , 1
000148 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 2841
000149 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:54 WORDS
                 SUBOPT_0x8:
00014a bbe2      	OUT  0x12,R30
00014b efa4      	LDI  R26,LOW(500)
00014c e0b1      	LDI  R27,HIGH(500)
00014d d00c      	RCALL _delay_ms
00014e e0e0      	LDI  R30,LOW(0)
00014f bbe2      	OUT  0x12,R30
000150 e6a4      	LDI  R26,LOW(100)
000151 e0b0      	LDI  R27,0
000152 c007      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x9:
000153 bbe5      	OUT  0x15,R30
000154 e9a0      	LDI  R26,LOW(400)
000155 e0b1      	LDI  R27,HIGH(400)
000156 d003      	RCALL _delay_ms
000157 e0e0      	LDI  R30,LOW(0)
000158 bbe5      	OUT  0x15,R30
000159 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 _delay_ms:
00015a 9610      	adiw r26,0
00015b f039      	breq __delay_ms1
                 __delay_ms0:
00015c 95a8      	wdr
                +
00015d eb88     +LDI R24 , LOW ( 0xBB8 )
00015e e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
00015f 9701     +SBIW R24 , 1
000160 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
000161 9711      	sbiw r26,1
000162 f7c9      	brne __delay_ms0
                 __delay_ms1:
000163 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :  32 r5 :  16 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   0 r23:   0 
r24:  22 r25:  10 r26:   7 r27:   4 r28:   1 r29:   1 r30: 117 r31:  18 
x  :   2 y  :   0 z  :   0 
Registers used: 11 out of 35 (31.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   9 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   1 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  18 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   8 cpc   :   8 cpi   :   0 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :   0 ldd   :   0 ldi   :  76 
lds   :   0 lpm   :   0 lsl   :   0 lsr   :   0 mov   :   0 movw  :  16 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  47 pop   :   0 push  :   0 rcall :  43 ret   :  19 
reti  :   0 rjmp  :  13 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :   8 sbic  :   2 sbis  :   0 sbiw  :  11 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   2 std   :   0 sts   :   0 sub   :   0 subi  :   0 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 22 out of 116 (19.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0002c8    712      0    712   32768   2.2%
[.dseg] 0x000060 0x000260      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
